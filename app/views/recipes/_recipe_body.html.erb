<% alternatives = [] unless local_assigns[:alternatives] %>
<% display_comments = false unless local_assigns[:display_comments] %>
<% hide_header = false unless local_assigns[:hide_header] %>
<div id="recipe-body-<%= recipe.id %>" class="recipe-body">

<% unless hide_header %>
  <%= render partial: "recipes/recipe_header", locals: {recipe: recipe} %>
<% end %>

<% unless recipe.ingredients.blank? %>
  
  <% foods_dup = recipe.ingredients.group_by {|i| i.food_id ? i.food_id : i.raw_food}.reject {|f,s| s.size == 1}.map(&:first) %>
  
  <h2>Ingrédients</h2>

  <div id="ing_list">
    <ul class="list-group">
      <% recipe.ingredients.order(:item_nb).each do |ing| %>
        <% recipe.ingredient_sections.select {|s| s.before_ing_nb == ing.item_nb}.each do |section| %>
          <h3><%= section.name %></h3>
        <% end %>
        <li class="list-group-item">
          <%= scalable_detailed_ingredient(ing) %><%# "*" if foods_dup.include?(ing.food_id) %>

          <div class="dropdown" style="display: inline-block; float: right">
             <%= image_tag icon_path("pencil-square.svg"), "data-bs-toggle": "dropdown", style: "cursor: pointer;" %>
            <div class="dropdown-menu">
              <a class="dropdown-item disabled" href="#">Retirer</a>
              <% if !ing.food.blank? and !ing.food.substitutions.blank? %>
                <h6 class="dropdown-header">Remplacer par</h6>
                <% ing.food.substitutions.each do |sub| %>
                  <a class="dropdown-item" href="#"><%= pretty_substitution(ing, sub) %></a>
                <% end %>
              <% end %>
            </div>
          </div>
          <%# link_to image_tag(icon_path("pencil-square.svg")), "FIXME", style: "float: right;" %>
        </li>
      <% end %>
      <% if recipe.mix %>
        <% recipe.mix.instructions.split(';').each do |line| %>
          <% if line.start_with? 'CONTAINER' %>
            <% id = line.split(',')[1] %>
            <% if id.to_f.to_s == id || id.to_i.to_s == id %>
              <h3>Contenant <%= id %></h3>
            <% else %>
              <h3><%= id %></h3>
            <% end %>
          <% elsif line.start_with? 'ADD' %>
            <li class="list-group-item">
              <% args = line.split(',') %>
              <% qty = args[1] %>
              <% food = args[2].split('-')[1] %>
              <% ing = RecipeIngredient.new(raw: qty, raw_food: food) %>
              <%= scalable_detailed_ingredient(ing) %><%# "*" if foods_dup.include?(ing.food_id) %>
            </li>
          <% end %>
        <% end %>
      <% end %>
    </ul>

    <% ing = recipe.main_ingredient ? recipe.main_ingredient : recipe.ingredients.first %>
    <div class="d-flex" style="text-align: center; margin-top: 4px;">
      <div class="d-none d-md-block">
        <%= text_field_tag :quantity, pretty_ingredient_qty(ing), class: "form-control", style: "width: 9rem; display: inline; text-align: right;", "data-quantity": ing.raw, id: "ingredient-qty-input-field" %>
        <%= collection_select :foo, :input_ingredient, recipe.ingredients, :id, :name, {selected: recipe.main_ingredient_id}, class: "form-select", id: "input-ingredients", style: "display: inline-block; width: auto;" %>
      </div>
      <div style="flex-grow: 1;"></div>
      <%= image_tag icon_path("right_arrow.svg"), class: "d-none d-md-block", style: "height: 2.45em; margin-right: 5px;" %>
      <div style="flex-grow: 1;"></div>
      <div style="margin-right: 5px;">
        <%= image_tag(icon_path("minus-square.svg"), style: "cursor: pointer; width: 1.5rem;", id: "less-servings-button") %>
        <%= text_field_tag :servings, recipe.servings, style: "width: 9rem; display: inline; text-align: right;", class: "form-control", id: "servings-input-field", "data-initial": recipe.servings %>
        <%= image_tag(icon_path("plus-square.svg"), style: "cursor: pointer; width: 1.5rem;", id: "more-servings-button") %>
      </div>
      <div style="clear: both;"></div>
    </div>
  </div>

  <% foods_dup.each do |dup| %>
    <br>
    <div>* <b><%= recipe.ingredients.find_by(food_id: dup).name %></b> se retrouve plusieurs fois dans les ingrédients</div>
  <% end %>

<% end %>

<% unless recipe.tools.blank? %> 
  <h2>Outils</h2>

  <ul style="font-size: 1.1rem;">
    <% recipe.tools.order(:name).each do |tool| %>
      <li>
        <%= tool.name %>
      </li>
    <% end %>
  </ul>
<% end %>

<h2>Instructions</h2>

<div class="edited-recipe">
  <%= pretty_instruction_text(recipe) %>
</div>

<% unless recipe.notes.blank? %>
  <h3>Notes</h3>
  <div class='notes'>
    <% recipe.notes.order(:item_nb).each do |note| %>
      <div id="note-<%= note.item_nb %>" style="margin-bottom: 0.5em;">
        [<%= note.item_nb %>] <%= my_sanitize(note.html) %>
      </div>
    <% end %>
  </div>
<% end %>

<% unless recipe.references.blank? %> 
  <h2>Références</h2>

  <div style="font-size: 1.1rem; margin-left: 1em;">
    <% recipe.references.each_with_index do |ref, i| %>
      <div>
        <%= i+1+recipe.notes.size %>.
        <% if ref.url? %>
          <%= link_to ref.url, ref.url %>
        <% else %>
          <%= ref.raw %>
        <% end %>
      </div>
    <% end %>
  </div>
<% end %>

<% unless recipe.similar_recipes.blank? %>
  <h2>Recettes similaires</h2>

  <h3><%= link_to translated(recipe.similar_recipes.first.name), recipe.similar_recipes.first %></h3>
  <%= pretty_print_recipe(recipe.similar_recipes.first) %>
<% end %>

<% if display_comments %>
  <h2>Commentaires</h2>
  
  <%# translated("Aucun commentaire pour l'instant.") %>
  <p>La section des commentaires n'est pas encore fonctionnelle. Pour toutes questions ou commentaires, vous pouvez me contacter à <%= mail_to "hedacuisine@gmail.com" %></p>
<% end %>

<div style="height: 3rem;"></div>
</div>
